---
# This playbook contains common plays that will be run on the bastion node.

# Install tools to allow invoking external url from bastion...
- name: Install dnsmasq to return apps.<opensshift> like entries
  yum:  
    name: "dnsmasq"
    state: latest
  environment:
    http_proxy: "{{ proxy_url | default('') }}"
    https_proxy: "{{ proxy_url | default('') }}"
  become: yes

# Delete /etc/dnsmasq.conf to start clean
- name: Delete /etc/dnsmasq.conf
  file:
    path: /etc/dnsmasq.conf
    state: absent
  become: yes

# Create /etc/dnsmasq.conf
- name: Create /etc/dnsmasq.conf
  file:
    path: /etc/dnsmasq.conf 
    owner: root
    group: root
    mode: 0644
    state: touch
  become: yes

# Add rules to /etc/dnsmasq.conf
- name: Add rules to return internal IPs for master and apps urls
  blockinfile:
    path: /etc/dnsmasq.conf
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    content: |
      address=/{{ login_hostname }}/{{ hostvars[groups['master'][0]]['ansible_default_ipv4']['address'] }}
      address=/.{{ cluster_hostname }}/{{ hostvars[groups['infra'][0]]['ansible_default_ipv4']['address'] }}
  become: yes

# Enable and start dnsmasq.service
- name: Enable and Start dnsmasq service, and not touch the running state
  service:
    name: dnsmasq
    enabled: yes
    state: restarted
  become: yes

- name: configure dnsmasq ports 53 to iptables
  iptables:
    action: insert
    chain: INPUT
    protocol: "{{ item }}"
    destination_port: "53"
    jump: ACCEPT
    comment: "Accept trafic to {{ item }}"
    with_items:
    - udp
    - tcp
  become: yes

# Create /etc/exports.d/rhm.exports
- name: Create /etc/exports.d/rhm.exports
  file:
    path: /etc/exports.d/rhm.exports
    owner: root
    group: root
    mode: 0644
    state: touch
  become: yes

# Create /srv/nfs/rhm
- name: Create /srv/nfs/rhm
  file:
    path: /srv/nfs/rhm
    owner: nfsnobody
    group: nfsnobody
    mode: 0644
    state: directory
  become: yes

# Add NFS export definition for RHM
- name: Add definition for NFS export for RHM
  blockinfile:
    path: /etc/exports.d/rhm.exports
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    content: |
      /srv/nfs/rhm *(rw,root_squash)
  become: yes

# Restart NFS service
- name: Restart nfs service
  service:
    name: nfs
    state: restarted
  become: yes

# Enable RHM repo & install templates
- name: Enable Red Hat Mobile repos
  shell: subscription-manager repos --enable="{{ rhmap_repo }}"
  become: yes

- name: Install templates & playbooks on bastion
  yum:  
    name: "rhmap-fh-openshift-templates"
    state: latest
  environment:
    http_proxy: "{{ proxy_url | default('') }}"
    https_proxy: "{{ proxy_url | default('') }}"
  become: yes

# Prepare RHMAP inventory file
- name: Setup ansible inventory for RHMAP
  template:
    src: rhmap_hosts.j2
    dest: /etc/ansible/hosts_rhmap
    mode: 0640
  become: yes

- name: Setup ansible variables for RHMAP CORE
  template:
    src: deploy-core-main.j2
    dest: /opt/rhmap/{{ rhmap_version }}/rhmap-installer/roles/deploy-core/defaults/main.yml
    mode: 0640
  become: yes

- name: Setup ansible variables for RHMAP MBAAS
  template:
    src: deploy-mbaas-main.j2
    dest: /opt/rhmap/{{ rhmap_version }}/rhmap-installer/roles/deploy-mbaas/defaults/main.yml
    mode: 0640
  become: yes

- name: "Install python-docker-py via yum"
  yum:
    name: python-docker-py
    enablerepo: rhel-7-server-extras-rpms
    state: present
  environment:
    http_proxy: "{{ proxy_url | default('') }}"
    https_proxy: "{{ proxy_url | default('') }}"
  become: yes
  when: ansible_os_family == 'RedHat'