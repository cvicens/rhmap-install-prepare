---
# This playbook contains common plays that will be run on all a master nodes

# Install needed packages

- name: Install nodejs & npm
  yum:  
    name: "nodejs"
    state: latest
  become: yes

# Install fhc

- name: Install fhc globally
  shell: npm install -g fh-fhc
  become: yes

# OCP login

- name: OCP login with user/pass
  shell: oc login {{ login_url }} --username={{ oc_user }} --password={{ oc_password }}
  register: login_out
  become: yes
  when: oc_oauth_token is not defined

- name: Get OpenShift token
  shell: oc whoami -t
  register: ocp_whoami_token
  when: oc_oauth_token is not defined

- name: OCP login with token
  shell: oc login {{ login_url }} --token={{ oc_oauth_token }}
  register: login_out
  become: yes
  when: oc_oauth_token is defined

# Setup fhc

- debug:
    msg: "core => {{ core }}"

- name: Get domain url
  shell: oc get route rhmap --template "{% raw %}https://{{.spec.host}}{% endraw %}" -n {{ core.project_name }}
  register: rhmap_domain_url
  become: yes
  
- name: Target fhc domain
  shell: fhc target {{ rhmap_domain_url.stdout }}

- name: Get AppStudio admin username
  shell: oc env dc/millicore -n {{ core.project_name }} --list | grep FH_ADMIN_USER_NAME
  register: rhmap_admin_username
  become: yes

- name: Get AppStudio admin password
  shell: oc env dc/millicore -n {{ core.project_name }} --list | grep FH_ADMIN_USER_PASSWORD
  register: rhmap_admin_password
  become: yes


# Create MBaaS Target

- name: fhc Login
  shell: fhc login {{rhmap_admin_username.stdout.split("=")[1]}} {{rhmap_admin_password.stdout.split("=")[1]}}

- name: Get MBaaS URL
  shell: oc get route mbaas -n {{ mbaas.project_name }} --template "{% raw %}{{.spec.host}}{% endraw %}"
  register: mbaas_url

- name: Get MBaaS Service Key
  shell: oc env dc/fh-mbaas -n {{ mbaas.project_name }} --list | grep FHMBAAS_KEY
  register: mbaas_service_key

- name: Create MBaaS Target
  shell: fhc admin mbaas create --id "{{ rhmap_mbaas_target_name }}" --url "{{ login_url }}"  --servicekey {{ mbaas_service_key.stdout.split("=")[1] }} --routerDNSUrl "*.{{ cluster_hostname }}" --fhMbaasHost "https://{{ mbaas_url.stdout }}" --type "openshift3" 

# Create Environment

- name: Create Environment
  shell: fhc admin environments create --id "{{ item.id }}" --label "{{ item.label }}" --target "{{ rhmap_mbaas_target_name }}" --token "{{ ocp_oauth_token | ocp_token.stdout }}"
  with_items: "{{ rhmap_environments }}"
